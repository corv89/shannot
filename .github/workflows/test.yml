name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container:
      # Note: Docker Hub occasionally has transient 503 errors.
      # If this fails, re-run the workflow.
      image: python:${{ matrix.python-version }}-slim
      options: --privileged
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y bubblewrap git
          bwrap --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,mcp,remote]"

      - name: Run ruff linter
        run: |
          ruff check .

      - name: Run ruff formatter check
        run: |
          ruff format --check .

      - name: Run type checker (basedpyright)
        run: |
          basedpyright

      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=shannot --cov-report=xml --cov-report=term

      - name: Upload coverage artifact
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Comment coverage on PR
        if: matrix.python-version == '3.11' && github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

  test-installation:
    name: Test Installation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install bubblewrap
        run: |
          sudo apt-get update
          sudo apt-get install -y bubblewrap

      - name: Install shannot with pip
        run: |
          pip install --user ".[all]"

      - name: Add user bin to PATH
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify shannot command exists and shows help
        run: |
          shannot --help
          shannot verify --help
          shannot export --help

      - name: Verify shannot is in PATH
        run: |
          which shannot
          shannot --version || echo "No version flag implemented"

      - name: Verify bundled profiles are accessible
        run: |
          python -c "
          import shannot
          from pathlib import Path
          import sys

          install_path = Path(shannot.__file__).parent
          profiles_dir = install_path.parent / 'profiles'
          expected = ['minimal.json', 'readonly.json', 'diagnostics.json']

          print(f'Checking for bundled profiles in: {profiles_dir}')
          missing = [p for p in expected if not (profiles_dir / p).exists()]

          if missing:
              print(f'ERROR: Missing profiles: {missing}')
              sys.exit(1)

          print(f'SUCCESS: All {len(expected)} bundled profiles found!')
          for profile in expected:
              size = (profiles_dir / profile).stat().st_size
              print(f'  âœ“ {profile} ({size} bytes)')
          "

  build:
    name: Build Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-packages
          path: dist/
