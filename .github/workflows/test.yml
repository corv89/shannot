name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container:
      # Note: Docker Hub occasionally has transient 503 errors.
      # If this fails, re-run the workflow.
      image: python:${{ matrix.python-version }}-slim
      options: --privileged
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y bubblewrap git
          bwrap --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run ruff linter
        run: |
          ruff check .

      - name: Run ruff formatter check
        run: |
          ruff format --check .

      - name: Run type checker (basedpyright)
        run: |
          basedpyright

      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=shannot --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  test-installation:
    name: Test Installation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install bubblewrap
        run: |
          sudo apt-get update
          sudo apt-get install -y bubblewrap

      - name: Test install script
        run: |
          bash install.sh

      - name: Verify shannot command
        run: |
          shannot --help
          shannot verify --allowed-command ls /

      - name: Test basic sandbox execution
        run: |
          shannot run ls /
          shannot run cat /etc/os-release
          shannot export

  build:
    name: Build Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-packages
          path: dist/
